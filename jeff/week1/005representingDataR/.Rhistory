2+2
load("~/Developer/R/Data for Dr. Joshi/workspace.RData")
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.1,.25,.01)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0)))
}
graph.points <- graph.points[2:101,]
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
lines(graph.points$X1, graph.points$X3, col=2)
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.01,.25,.01)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0)))
}
graph.points <- graph.points[2:101,]
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
lines(graph.points$X1, graph.points$X3, col=2)
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.05,.25,.025)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0)))
}
graph.points <- graph.points[2:101,]
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
lines(graph.points$X1, graph.points$X3, col=2)
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.05,.25,.025)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0.05)))
}
graph.points <- graph.points[2:101,]
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
lines(graph.points$X1, graph.points$X3, col=2)
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.05,.25,.025)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0.05)))
}
graph.points <- graph.points[2:101,]
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0,.25,.025)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0.05)))
}
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.01,.25,.01)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0.05)))
}
graph.points <- graph.points[2:101,]
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
model
lines(graph.points$X1, graph.points$X3, col=2)
lm(model$Y ~ model$X1)
summary(lm(model$Y ~ model$X1))
x1sum <- summary(lm(model$Y ~ model$X1))
x1sum$r.squared
x1sum
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.01,.05,.01)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0.05)))
}
graph.points <- graph.points[2:101,]
graph.points
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.01,1,.01)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0.05)))
}
graph.points <- graph.points[2:101,]
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
glass <- function(kappa, var.a){
# Let's start creating that data structure we're finally going to analyze
model <- data.frame(matrix(0, nrow = 50, ncol = 7))
colnames(model) <- c("World", "SongID", "Y", "X1", "X2", "X3", "X4")
#fill model -- Worlds 9 and 10 correpond to world 1 and 2 in Exp 3
model[,1] <- c(rep(1,5), rep(2,5), rep(3,5), rep(4,5), rep(5,5), rep(6,5), rep(7,5), rep(8,5), rep(9,5), rep(10,5))
numbered.songs <- c()
for(i in 1:10){
numbered.songs <- c(numbered.songs, top.five.songs[[i]])
}
model[,2] <- numbered.songs
for(i in 1:50){
model[i,3] <- mkt.share.time.series[[i]][length(mkt.share.time.series[[i]])]
model[i,4] <- no.SI.market.share.time.series[[model[i,2]]][length(no.SI.market.share.time.series[[model[i,2]]])]
tau <- min(which(MM.high.SI[[model[i,1]]] > 1.1)) #CHANGE TAU HERE
model[i,5] <- mkt.share.time.series[[i]][tau]
model[i,6] <- mkt.share.time.series[[i]][getTimeIndex(kappa, mkt.share.time.series[[i]])]
model[i,7] <- apply(mkt.share.time.series[[i]][getTimeIndex(var.a, mkt.share.time.series[[i]]):
getTimeIndex(kappa, mkt.share.time.series[[i]])], 1, mean)
}
fm <- summary(lm(model$Y ~ model$X1 + model$X2 + model$X3 + model$X4))
x1m <- summary(lm(model$Y ~ model$X1))
x3m <- summary(lm(model$Y ~ model$X3))
return(c(fm$adj.r.squared, x1m$adj.r.squared, x3m$adj.r.squared))
}
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.01,1,.01)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0.05)))
}
graph.points <- graph.points[2:101,]
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
dynamics_downloads_w9_v2 <- read.csv("~/Developer/R/Smith Internship/clean_musiclab_data/dynamics_downloads_w9_v2.txt", header=F)
View(dynamics_downloads_w9_v2)
apply(dynamics_downloads_w9_v2, 1, sum)
apply(dynamics_downloads_w9_v2, 2, sum)
dynamics_downloads_w9_v2 <- apply(dynamics_downloads_w9_v2, 2, sum)[,3:50]
dynamics_downloads_w9_v2 <- apply(dynamics_downloads_w9_v2, 2, sum)[1,3:50]
dynamics_downloads_w9_v2 <-NULL# apply(dynamics_downloads_w9_v2, 2, sum)[1,3:50]
dynamics_downloads_w9_v2 <- apply(dynamics_downloads_w9_v2, 2, sum)[1,3:50]
dynamics_downloads_w9_v2 <- read.csv("~/Developer/R/Smith Internship/clean_musiclab_data/dynamics_downloads_w9_v2.txt", header=F)
dynamics_downloads_w9_v2[,3:50]
apply(dynamics_downloads_w9_v2, 2, sum)[1,3:50]
dynamics_downloads_w9_v2 <- apply(dynamics_downloads_w9_v2, 2, sum)
dynamics_downloads_w9_v2
fix(dynamics_downloads_w9_v2)
dynamics_downloads_w9_v2[1]
dynamics_downloads_w9_v2 <- read.csv("~/Developer/R/Smith Internship/clean_musiclab_data/dynamics_downloads_w9_v2.txt", header=F)
dynamics_downloads_w9_v2 <- as.numeric(apply(dynamics_downloads_w9_v2, 2, sum))
fix(dynamics_downloads_w9_v2)
no.SI.market.share.time.series
no.SI.market.share.time.series[[1]]
no.SI.market.share.time.series[[4]]
no.SI.market.share.time.series[[27]]
no.SI.market.share.time.series.old <- no.SI.market.share.time.series
for(i in 1:length(unique.songs)){
no.SI.market.share.time.series[[unique.songs[i]]] <- dynamics_downloads_w9_v2[i] / sum(dynamics_downloads_w9_v2)
}
dynamics_downloads_w9_v2
dynamics_downloads_w9_v2 <- dynamics_downloads_w9_v2[3:50]
dynamics_downloads_w9_v2
for(i in 1:length(unique.songs)){
no.SI.market.share.time.series[[unique.songs[i]]] <- dynamics_downloads_w9_v2[unique.songs[i]] / sum(dynamics_downloads_w9_v2)
}
no.SI.market.share.time.series[27]
no.SI.market.share.time.series
for(i in 1:50){
model[i,3] <- mkt.share.time.series[[i]][length(mkt.share.time.series[[i]])]
model[i,4] <- no.SI.market.share.time.series[[model[i,2]]]
tau <- min(which(MM.high.SI[[model[i,1]]] > 1.1)) #CHANGE TAU HERE
model[i,5] <- mkt.share.time.series[[i]][tau]
kappa <- .5 #CHANGE KAPPA HERE
model[i,6] <- mkt.share.time.series[[i]][getTimeIndex(kappa, mkt.share.time.series[[i]])]
var.a <- .05 #CHANGE a HERE
model[i,7] <- apply(mkt.share.time.series[[i]][getTimeIndex(var.a, mkt.share.time.series[[i]]):
getTimeIndex(kappa, mkt.share.time.series[[i]])], 1, mean)
}
lm(model$Y ~ model$X1 + model$X2 + model$X3 + model$X4)
fm <- summary(lm(model$Y ~ model$X1 + model$X2 + model$X3 + model$X4))
summary(fm)
model
summary(lm(model$Y ~ model$X1 + model$X2 + model$X3 + model$X4))
graph.points <- data.frame(matrix(0, nrow = 1, ncol = 4))
for(i in seq(0.01,1,.01)){ #CHANGE MIDDLE VALUE .25, .0025 OR 1, .01
graph.points <- rbind(graph.points, c(i,glass(i,0.05)))
}
graph.points <- graph.points[2:101,]
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
lines(graph.points$X1, graph.points$X3, col=2)
plot(graph.points$X1, graph.points$X2, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
plot(graph.points$X1, graph.points$X2, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
plot(graph.points$X1, graph.points$X4, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
lines(graph.points$X1, graph.points$X3, col=2)
plot(graph.points$X1, graph.points$X2, type = "l", xlab="Fraction of Timeseries", ylab="R-squared", ylim=c(0,1))
lines(graph.points$X1, graph.points$X3, col=2)
save.image("~/Developer/R/Smith Internship/Data for Dr. Joshi/workspace.RData")
library("slidifyLibraries", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("slidify", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
setwd("~/Documents/modules/jeff")
slidify("index.Rmd")
setwd("~/Documents/modules/jeff/exampleLecture")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Developer/GitHub/dataanalysis/week1/001courseLogistics")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Developer/GitHub/modules/jeff/001courseLogistics")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Developer/GitHub/modules/jeff/001courseLogistics")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Developer/GitHub/modules/jeff/001courseLogistics")
slidify("index.Rmd")
setwd("~/Developer/GitHub/modules/jeff/001courseLogistics")
setwd("~/Developer/GitHub/modules/jeff/002gettingHelp")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Developer/GitHub/modules/jeff/001courseLogistics")
slidify('index.Rmd', options = list(framework = "io2012", copy_libraries = TRUE))
slidify('index.Rmd', options = list(framework = "io2012", copy_libraries = TRUE))
slidify('index.Rmd', options = list(framework = "io2012", copy_libraries = TRUE))
slidify('index.Rmd', options = list(copy_libraries = TRUE, theme = "io2012"))
slidify("index.Rmd", options = list(copy_libraries = TRUE, theme = "io2012") )
?slidify
slidify("index.Rmd")
setwd("~/Developer/GitHub/modules/jeff/003whatIsData")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Developer/GitHub/modules/jeff/003whatIsData")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Developer/GitHub/modules/jeff/004representingData")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/Developer/GitHub/modules/jeff/005representingDataR")
slidify("index.Rmd")
